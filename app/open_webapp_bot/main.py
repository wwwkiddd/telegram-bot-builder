from aiogram import Bot, Dispatcher, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.memory import MemoryStorage
import asyncio
import os
from dotenv import load_dotenv
from app.shared.yookassa_api import create_payment_link
from app.shared.subscription_db import set_subscription


load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBAPP_URL = os.getenv("WEBAPP_URL")

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())

@dp.message(F.text.lower() == "/start")
async def start(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöÄ –°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞", web_app=WebAppInfo(url=WEBAPP_URL))],
        [InlineKeyboardButton(text="üí∞ –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="pay")],
        [InlineKeyboardButton(text="üõí –ú–∞–≥–∞–∑–∏–Ω", callback_data="shop")],
        [InlineKeyboardButton(text="üõ† –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", url="https://t.me/nikita_support")]
    ])
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

@dp.callback_query(F.data == "pay")
async def show_payment_options(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="1 –º–µ—Å—è—Ü ‚Äî 300 ‚ÇΩ", callback_data="pay_1")],
        [InlineKeyboardButton(text="3 –º–µ—Å—è—Ü–∞ ‚Äî 800 ‚ÇΩ", callback_data="pay_3")],
        [InlineKeyboardButton(text="12 –º–µ—Å—è—Ü–µ–≤ ‚Äî 3000 ‚ÇΩ", callback_data="pay_12")]
    ])
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏:", reply_markup=keyboard)

@dp.callback_query(F.data.in_({"pay_1", "pay_3", "pay_12"}))
async def handle_payment(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    bot_id = f"user_{user_id}"  # –∏–ª–∏ –ø–æ–ª—É—á–∞–π –∏–∑ –ë–î

    months = {
        "pay_1": 1,
        "pay_3": 3,
        "pay_12": 12
    }[callback.data]

    price = {
        1: 300,
        3: 800,
        12: 3000
    }[months]

    url = create_payment_link(price, user_id, bot_id)
    await callback.message.answer(f"üí≥ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n{url}")

@dp.callback_query(F.data == "shop")
async def show_shop(callback: types.CallbackQuery):
    await callback.message.answer("üõí –ú–∞–≥–∞–∑–∏–Ω —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!")

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")  # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    try:
        await dp.start_polling(bot)
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏

if __name__ == "__main__":
    asyncio.run(main())